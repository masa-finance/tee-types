---
description: 
globs: 
alwaysApply: false
---
# tee-types: LinkedIn Data Structures Extension

## Overview
This plan details the required changes for the `github.com/masa-finance/tee-types` repository. These changes are a prerequisite for integrating the new LinkedIn profile fetching functionality into the `tee-worker`. The goal is to extend the existing data structures to support both profile search and full profile fetching jobs.

## ⚠️ CRITICAL REQUIREMENTS
- **BACKWARD COMPATIBILITY**: The changes must not break existing `tee-worker` functionality that relies on `searchbyquery`.
- **CONSISTENCY**: The new data structures should align with the output of the `linkedin-scraper` SDK (`v1.0.0`).
- **CLARITY**: Use clear and descriptive naming for new structs and fields.

## Implementation Steps

### Phase 1: Argument Structure Update

#### Step 1.1: Extend and Rename Job Arguments
**Objective**: Create a unified argument struct that supports both search and profile fetching.
**Files**: `args/linkedin.go`
**Action**:
- Rename the existing `LinkedInSearchArguments` struct to `LinkedInArguments`. This provides a more generic name for future extensions.
- Add a new field `PublicIdentifier string `json:"public_identifier,omitempty"` to the renamed `LinkedInArguments` struct. This will be used to specify the target profile for fetching.
**Verification**: The new `LinkedInArguments` struct contains fields for both search (`Query`, `MaxResults`, etc.) and profile fetching (`PublicIdentifier`).
**Commit**: `feat(args): extend and rename linkedin arguments for profile fetching`

### Phase 2: Result Structure Extension

#### Step 2.1: Define Comprehensive Profile Result
**Objective**: Create a new struct to hold the rich data from a full profile fetch.
**Files**: `types/linkedin.go`
**Action**:
- Create a new struct `LinkedInFullProfileResult`.
- This struct should include fields for all the data provided by the scraper's `GetProfile` method, such as:
  - `PublicIdentifier`, `URN`, `FullName`, `Headline`, `Location`, `Summary`
  - Slices for `[]Experience`, `[]Education`, `[]Skill`
  - `ProfilePictureURL`
- Define helper structs for `Experience`, `Education`, and `Skill` with relevant fields (e.g., `Title`, `CompanyName` for experience; `SchoolName`, `DegreeName` for education).
**Verification**: The `LinkedInFullProfileResult` and its nested structs are defined and compile correctly. The structure matches the expected output from the `linkedin-scraper`.
**Commit**: `feat(types): add LinkedInFullProfileResult for detailed profiles`

## Success Criteria
- ✅ `args/linkedin.go` contains the updated `LinkedInArguments` struct.
- ✅ `types/linkedin.go` contains the new `LinkedInFullProfileResult` and its associated substructures.
- ✅ The changes are non-breaking for code that uses the old `LinkedInSearchArguments` (after a name update).
- ✅ The new structures are ready to be consumed by the `tee-worker`.
